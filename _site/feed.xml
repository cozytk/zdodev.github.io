<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2021-03-12T23:15:15+09:00</updated><id>/feed.xml</id><title type="html">zerodotone</title><subtitle>An amazing website.</subtitle><author><name>zerodotone</name></author><entry><title type="html">UML 작성하기 (feat. PlantUML)</title><link href="/uml/UML-%EC%9E%91%EC%84%B1%ED%95%98%EA%B8%B0-(feat.PlantUML)/" rel="alternate" type="text/html" title="UML 작성하기 (feat. PlantUML)" /><published>2021-03-12T00:00:00+09:00</published><updated>2021-03-13T08:04:00+09:00</updated><id>/uml/UML-%EC%9E%91%EC%84%B1%ED%95%98%EA%B8%B0-(feat.PlantUML)</id><content type="html" xml:base="/uml/UML-%EC%9E%91%EC%84%B1%ED%95%98%EA%B8%B0-(feat.PlantUML)/">&lt;h3 id=&quot;uml-작성하기&quot;&gt;UML 작성하기&lt;/h3&gt;

&lt;p&gt;프로젝트를 시작하기 전에나 기존의 코드들 구성을 가시적으로 보고 싶어서 여러 방법을 고민하다가 UML을 작성해보기로 했습니다.&lt;/p&gt;

&lt;p&gt;막상 UML 작성 도구들을 찾아보니 많은 도구가 나와 있고 도구별로 UML 지원 버전이나 편의성도 아주 달랐습니다. 데스크톱 앱 기반도 있고 웹앱 기반도 많이 있었습니다. 이런저런 고민을 하다가 텍스트 스크립트 기반의 UML 도구를 선택했습니다. 다른 도구들과 다르게 스크립트 배우고 작성해야 하는 어려움은 있지만, 텍스트 기반이므로 git을 통해 공유 및 편집을 통한 협업을 자유롭게 할 수 있습니다. 그중에서도 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PlantUML&lt;/code&gt; 은 오픈소스 UML 작성 도구로 라이선스 걱정도 없습니다.&lt;/p&gt;

&lt;p&gt;여기에서는 Visual Studio Code를 통해 UML을 작성해보았습니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Visual Studio Code의 Extension 탭에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PlantUML&lt;/code&gt; 을 검색하여 설치합니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/image/2021-03-12 at 10.00.00 PM-plantuml.png&quot; alt=&quot;2021-03-12 at 10.00.00 PM-plantuml&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;여러 가지 다이어그램을 그리기 위해서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GraphViz&lt;/code&gt; 를 설치해야 합니다. macOS에서 homebrew를 통해 쉽게 설치할 수 있습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;graphviz
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;설치를 다 하고 나서 Visual Studio Code에서 다음과 같이 PlantUML 스크립트를 작성합니다.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@startuml&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;scale&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Event&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;startTime:&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DateTime&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;venue:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;registrationClosed:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;notifyAttendes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ApplicationUser&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;username:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;password:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;isLocked:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;suggestRandomPassword&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;changeProfilePic&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Speaker&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;openForSpeaking:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;callForAction&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;applyAsSpokePerson&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Topic&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;title:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;sourcesCodeUrl:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;downloadMaterials&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Attendee&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;eventAttended:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;number&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;suggestEventBasedOnPreference&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;registerForTicket&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;ApplicationUser&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;|--&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Speaker&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;ApplicationUser&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;|--&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Attendee&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;Speaker&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;1&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*--&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;*&quot;&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Topic&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;Event&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;1&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;--&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;*&quot;&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Speaker&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;Event&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;1&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;--&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;*&quot;&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Attendee&lt;/span&gt;

&lt;span class=&quot;nd&quot;&gt;@enduml&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;스크립트 작성 후 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;shift + command + p&lt;/code&gt;를 누르고 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PlantUML: Preview Current Diagram&lt;/code&gt;을 입력하고 선택합니다. 그러면 다음 화면과 같이 UML을 확인할 수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/image/2021-03-12 at 10.00.01 PM-umlsource.png&quot; alt=&quot;2021-03-12 at 10.00.01 PM-umlsource&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;참고-url&quot;&gt;참고 URL&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Visual Studio Code: https://code.visualstudio.com&lt;/li&gt;
  &lt;li&gt;PlantUML: https://plantuml.com/ko/&lt;/li&gt;
  &lt;li&gt;Graphviz: https://graphviz.org&lt;/li&gt;
&lt;/ul&gt;</content><author><name>zerodotone</name></author><category term="UML" /><summary type="html">UML 작성하기</summary></entry><entry><title type="html">Vim 환경설정 세팅하기</title><link href="/vim/Vim-%EC%84%A4%EC%A0%95-%EC%84%B8%ED%8C%85%ED%95%98%EA%B8%B0/" rel="alternate" type="text/html" title="Vim 환경설정 세팅하기" /><published>2021-03-11T00:00:00+09:00</published><updated>2021-03-11T09:19:00+09:00</updated><id>/vim/Vim-%EC%84%A4%EC%A0%95-%EC%84%B8%ED%8C%85%ED%95%98%EA%B8%B0</id><content type="html" xml:base="/vim/Vim-%EC%84%A4%EC%A0%95-%EC%84%B8%ED%8C%85%ED%95%98%EA%B8%B0/">&lt;h3 id=&quot;vim-환경설정-세팅하기&quot;&gt;Vim 환경설정 세팅하기&lt;/h3&gt;

&lt;p&gt;Vundle은 Vim Bundle을 줄인 말로 Vim 플러그인을 관리하는 플러그인입니다.&lt;/p&gt;

&lt;p&gt;Vundle을 설치하는 방법은 다음과 같습니다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git clone https://github.com/gmarik/Vundle.vim.git ~/.vim/bundle/vundle
vi ~/.vimrc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;다음의 내용을 입력합니다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;rtp+&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;~/.vim/bundle/vundle/
call vundle#begin&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;
Bundle 'gmarik/Vundle.vim'
Plugin 'The-NERD-tree'
Bundle 'davidhalter/jedi-vim'
call vundle#end()
filetype plugin indent on
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;플러그인-검색&quot;&gt;플러그인 검색&lt;/h4&gt;

&lt;p&gt;:PluginSearch &lt;이름&gt;&lt;/이름&gt;&lt;/p&gt;

&lt;h4 id=&quot;플러그인-설치&quot;&gt;플러그인 설치&lt;/h4&gt;

&lt;p&gt;:PluginInstall &lt;이름&gt; // 특정 플러그인 설치&lt;/이름&gt;&lt;/p&gt;

&lt;p&gt;:BundleInstall // vimrc에 적힌 플러그인 전체 설치&lt;/p&gt;

&lt;p&gt;The NERD tree 플러그인은 Finder처럼 사용할 수 있는 Vim 디렉터리 탐색기입니다.&lt;/p&gt;

&lt;p&gt;받은 파일을 플러그인 디렉터리에 놓고 압축을 풀면 설치가 완료됩니다.&lt;/p&gt;

&lt;p&gt;vi 입력창에서 :NERDTree 명령을 입력하면 적용됩니다.&lt;/p&gt;

&lt;p&gt;:NERDTree [ start-directory | bookmark ]&lt;/p&gt;

&lt;p&gt;:NERDTreeClose // NERD tree 창을 닫습니다.&lt;/p&gt;

&lt;p&gt;&amp;lt;CR&amp;gt;, o는 디렉터리를 이동하거나 파일을 엽니다.&lt;/p&gt;

&lt;p&gt;t는 파일을 새로운 탭에 엽니다.&lt;/p&gt;

&lt;p&gt;T는 파일을 새로운 탭의 백그라운드로 엽니다.&lt;/p&gt;

&lt;p&gt;x는 현재 선택된 노드를 닫고 상위 노드로 이동합니다.&lt;/p&gt;

&lt;p&gt;X는 현재 선택된 노드를 포함하여 하위 노드를 모두 닫습니다.&lt;/p&gt;

&lt;p&gt;e는 선택된 노드를 새 창에서 엽니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Vim 환경설정&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;et nocompatible           &lt;span class=&quot;s2&quot;&gt;&quot; Use Vim defaults (much better!)
set bs=indent,eol,start    &quot;&lt;/span&gt; allow backspacing over everything &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;insert mode.
&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;autowrite              &lt;span class=&quot;s2&quot;&gt;&quot; write the contents of the file, if it has been modifired, on each and command.
set autoread               &quot;&lt;/span&gt; automatically &lt;span class=&quot;nb&quot;&gt;read &lt;/span&gt;it again.
&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;laststatus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;2           &lt;span class=&quot;s2&quot;&gt;&quot; the value of this option influences when the last windows will have a status line.
set ruler                  &quot;&lt;/span&gt; show the line and column number of the cursor position, separated by a comma.
&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;cindent                &lt;span class=&quot;s2&quot;&gt;&quot; enables automatic C program indenting. C 언어 스타일의 들여쓰기를 사용합니다.
set autoindent             &quot;&lt;/span&gt; always &lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;autoindenting on. 자동 들여쓰기를 사용합니다.
&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;smartindent            &lt;span class=&quot;s2&quot;&gt;&quot; do smart autoindenting when starting a new line.
set showcmd                &quot;&lt;/span&gt; show &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;partial&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;command &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;the last line of the screen
&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;showmatch              &lt;span class=&quot;s2&quot;&gt;&quot; when a bracket is inserted, briefly jump to the matching one.
set number                 &quot;&lt;/span&gt; print the line number &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;front of each line. 화면에 행 번호를 표시합니다.
&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;tabstop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;4              &lt;span class=&quot;s2&quot;&gt;&quot; number of spaces that a &amp;lt;Tab&amp;gt; in the file counts for.
set shiftwidth=4           &quot;&lt;/span&gt; numver of spaces to use &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;each of &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;auto&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;indent.
&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;softtabstop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;4          &lt;span class=&quot;s2&quot;&gt;&quot; number of spaces that a &amp;lt;Tab&amp;gt; counts for while performing editing operations, like inseting a &amp;lt;Tab&amp;gt; or using &amp;lt;BS&amp;gt;.
set expandtab              &quot;&lt;/span&gt; use the appropriate number of spaces to insert a &amp;lt;Tab&amp;gt;.

&lt;span class=&quot;s2&quot;&gt;&quot; ----- Vundle Setting -----
set rtp+=~/.vim/bundle/vundle/
call vundle#begin()
Plugin 'The-NERD-tree'
Bundle 'gmarik/vundle'
Bundle 'davidhalter/jedi-vim'
call vundle#end()

syntax enable
syntax on
let python_highlight_all=1
filetype indent plugin on

&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-----&lt;/span&gt; Color Setting &lt;span class=&quot;nt&quot;&gt;-----&lt;/span&gt;
colorscheme elflord

&lt;span class=&quot;s2&quot;&gt;&quot; ----- Macro Setting -----
map &amp;lt;F1&amp;gt; :x!&amp;lt;cr&amp;gt;
map &amp;lt;F2&amp;gt; :up&amp;lt;cr&amp;gt;
map &amp;lt;F3&amp;gt; :q!&amp;lt;cr&amp;gt;
map &amp;lt;F4&amp;gt; :up&amp;lt;cr&amp;gt;:!python3 %&amp;lt;cr&amp;gt;
map &amp;lt;F5&amp;gt; :up&amp;lt;cr&amp;gt;:!gcc -Wall -W -O2 %&amp;lt;cr&amp;gt;:!./a.out&amp;lt;cr&amp;gt;
&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-Wall&lt;/span&gt;: 모든 경고 메시지 출력
&lt;span class=&quot;s2&quot;&gt;&quot; -W: Wall에서 제외된 16가지의 경고를 출력
&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-O2&lt;/span&gt;: 최적화 수행
map &amp;lt;F6&amp;gt; :NERDTreeToggle&amp;lt;cr&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>zerodotone</name></author><category term="Vim" /><summary type="html">Vim 환경설정 세팅하기</summary></entry><entry><title type="html">Swift에서 커맨드라인으로 입력받고 조작하기</title><link href="/swift/Swift%EC%97%90%EC%84%9C-%EC%BB%A4%EB%A7%A8%EB%93%9C%EB%9D%BC%EC%9D%B8-%EC%9E%85%EB%A0%A5%EB%B0%9B%EA%B3%A0-%EC%A1%B0%EC%9E%91%ED%95%98%EA%B8%B0/" rel="alternate" type="text/html" title="Swift에서 커맨드라인으로 입력받고 조작하기" /><published>2021-03-11T00:00:00+09:00</published><updated>2021-03-11T09:35:00+09:00</updated><id>/swift/Swift%EC%97%90%EC%84%9C-%EC%BB%A4%EB%A7%A8%EB%93%9C%EB%9D%BC%EC%9D%B8-%EC%9E%85%EB%A0%A5%EB%B0%9B%EA%B3%A0-%EC%A1%B0%EC%9E%91%ED%95%98%EA%B8%B0</id><content type="html" xml:base="/swift/Swift%EC%97%90%EC%84%9C-%EC%BB%A4%EB%A7%A8%EB%93%9C%EB%9D%BC%EC%9D%B8-%EC%9E%85%EB%A0%A5%EB%B0%9B%EA%B3%A0-%EC%A1%B0%EC%9E%91%ED%95%98%EA%B8%B0/">&lt;h3 id=&quot;swift에서-키보드-커맨드라인표준입력으로-입력받는-방법&quot;&gt;Swift에서 키보드, 커맨드라인(표준입력)으로 입력받는 방법&lt;/h3&gt;

&lt;p&gt;Swift에서는 표준입력 받는 함수를 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;readLine(strippingNewline:)&lt;/code&gt;으로 정의하고 있습니다. readLine() 함수는 다음과 같이 정의되었습니다.&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;readLine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;strippingNewline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Bool&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;readline 함수는 입력을 받아서 문자열을 반환하는데 만약 파일의 끝에서 다시 한 번 호출할 경우 nil을 반환합니다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;strippingNewline&lt;/code&gt; 파라미터는 개행문자와 문자조합을 문자열에서 제거 여부를 나타냅니다. 디폴트로 true로 설정되어있으며 개행문자와 문자조합이 제거됩니다.&lt;/p&gt;

&lt;p&gt;키보드에서 입력을 받으면 문자열 옵셔널이 반환되므로 옵셔널 바인딩을 통해 사용할 수 있습니다.&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;readLine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;input = &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이후 정수형 또는 실수형으로 변경하여 사용할 수 있습니다.&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;readLine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;input = &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;integer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;integer = &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;integer&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Double&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;double = &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;double&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;기본적으로 문자열이므로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;split(separator:)&lt;/code&gt; 메서드를 통해 각각의 요소로 분리할 수 있습니다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;split(separator:)&lt;/code&gt; 메서드의 반환 타입은 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;String.SubSequence&lt;/code&gt; 입니다.&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;readLine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;splitString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;separator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot; &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;splitString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Foundation&lt;/code&gt; 프레임워크에 있는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;components(separatedBy:)&lt;/code&gt; 메서드를 사용하여 위 메서드와 같이 각각의 요소로 분리할 수 있습니다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;components(separatedBy:)&lt;/code&gt; 메서드의 반환 타입은 문자열 배열 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[String]&lt;/code&gt; 입니다.&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;readLine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;componentsString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;components&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;separatedBy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot; &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;componentsString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>zerodotone</name></author><category term="Swift" /><summary type="html">Swift에서 키보드, 커맨드라인(표준입력)으로 입력받는 방법</summary></entry><entry><title type="html">macOS Command Line Tool 프로젝트에 Unit Test 추가하기</title><link href="/macos/xctest/macOS-Command-Line-Tool-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EC%97%90-Unit-Test-%EC%B6%94%EA%B0%80%ED%95%98%EA%B8%B0/" rel="alternate" type="text/html" title="macOS Command Line Tool 프로젝트에 Unit Test 추가하기" /><published>2021-03-10T00:00:00+09:00</published><updated>2021-03-10T20:00:00+09:00</updated><id>/macos/xctest/macOS-Command-Line-Tool-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EC%97%90-Unit-Test-%EC%B6%94%EA%B0%80%ED%95%98%EA%B8%B0</id><content type="html" xml:base="/macos/xctest/macOS-Command-Line-Tool-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EC%97%90-Unit-Test-%EC%B6%94%EA%B0%80%ED%95%98%EA%B8%B0/">&lt;h3 id=&quot;macos-프로젝트에서-테스트-생성하기&quot;&gt;macOS 프로젝트에서 테스트 생성하기&lt;/h3&gt;

&lt;p&gt;Xcode에서 순수하게 Swift만을 다루기 위해 macOS Command Line Tool 프로젝트를 생성할 때가 종종 있는데, 이때 테스트를 포함해서 생성하는 기능이 없어서 프로젝트 생성 후 Unit Test를 추가하는 방법을 정리해보았습니다.&lt;/p&gt;

&lt;p&gt;Xcode를 실행한 후 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Create a new Xcode project&lt;/code&gt;를 클릭합니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/image/2021-03-09-21-24-52-Unit-Test.png&quot; alt=&quot;2021-03-09-21-24-52-Unit-Test&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;macOS&lt;/code&gt; 플랫폼에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Command Line Tool&lt;/code&gt;을 선택합니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/image/2021-03-09-21-25-42-Unit-Test.png&quot; alt=&quot;2021-03-09-21-25-42-Unit-Test&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Product Name&lt;/code&gt;을 입력한 후 프로젝트를 생성합니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/image/2021-03-09-21-25-49-Unit-Test.png&quot; alt=&quot;2021-03-09-21-25-49-Unit-Test&quot; /&gt;&lt;/p&gt;

&lt;p&gt;프로젝트 환경설정 중앙 왼쪽에 있는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TARGETS&lt;/code&gt; 탭  가장 하단의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;+&lt;/code&gt; 버튼을 클릭합니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/image/2021-03-09-21-26-09-Unit-Test.png&quot; alt=&quot;2021-03-09-21-26-09-Unit-Test&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;macOS&lt;/code&gt; 플랫폼에서 Unit을 검색하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Unit Testing Bundle&lt;/code&gt; 을 선택합니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/image/2021-03-09-21-26-23-Unit-Test.png&quot; alt=&quot;2021-03-09-21-26-23-Unit-Test&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Product Name&lt;/code&gt; 을 입력하고 테스트를 생성합니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/image/2021-03-09-21-26-28-Unit-Test.png&quot; alt=&quot;2021-03-09-21-26-28-Unit-Test&quot; /&gt;&lt;/p&gt;

&lt;p&gt;화면 상단의 터미널 아이콘이 있는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MyApp&lt;/code&gt; 을 클릭합니다. (아까 클릭한 TARGETS 탭에서 최상단으로 바로 올라가면 됩니다.) 클릭 후 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Edit Scheme&lt;/code&gt; 을 클릭합니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/image/2021-03-09-21-26-50-Unit-Test.png&quot; alt=&quot;2021-03-09-21-26-50-Unit-Test&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Test 탭에서 하단의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;+&lt;/code&gt; 버튼을 클릭합니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/image/2021-03-09 at 9.26.56 PM-Unit-Test.png&quot; alt=&quot;2021-03-09 at 9.26.56 PM-Unit-Test&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이전에 생성한 Test를 선택하고 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Add&lt;/code&gt; 를 클릭합니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/image/2021-03-09 at 9.27.00 PM-Unit-Test.png&quot; alt=&quot;2021-03-09 at 9.27.00 PM-Unit-Test&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main.swift&lt;/code&gt; 에서 테스트할 코드를 작성하고 오른쪽 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Target Membership&lt;/code&gt; 탭에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Tests&lt;/code&gt;(생성한 테스트이름) 체크박스를 선택합니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/image/2021-03-09 at 9.29.19 PM-Unit-Test.png&quot; alt=&quot;2021-03-09 at 9.29.19 PM-Unit-Test&quot; /&gt;&lt;/p&gt;

&lt;p&gt;테스트 코드를 작성하고 테스트를 수행하면 정상적으로 테스트가 수행되는 것을 확인할 수 있습니다.😎&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/image/2021-03-09 at 9.29.59 PM-Unit-Test.png&quot; alt=&quot;2021-03-09 at 9.29.59 PM-Unit-Test&quot; /&gt;&lt;/p&gt;</content><author><name>zerodotone</name></author><category term="macOS" /><category term="XCTest" /><summary type="html">macOS 프로젝트에서 테스트 생성하기</summary></entry><entry><title type="html">macOS 업데이트 후 개발도구 에러 해결하기(xcrun error)</title><link href="/macos/macOS-%EC%97%85%EB%8D%B0%EC%9D%B4%ED%8A%B8-%ED%9B%84-%EA%B0%9C%EB%B0%9C%EB%8F%84%EA%B5%AC-%EC%97%90%EB%9F%AC-%ED%95%B4%EA%B2%B0%ED%95%98%EA%B8%B0/" rel="alternate" type="text/html" title="macOS 업데이트 후 개발도구 에러 해결하기(xcrun error)" /><published>2021-03-09T00:00:00+09:00</published><updated>2021-03-10T04:50:00+09:00</updated><id>/macos/macOS-%EC%97%85%EB%8D%B0%EC%9D%B4%ED%8A%B8-%ED%9B%84-%EA%B0%9C%EB%B0%9C%EB%8F%84%EA%B5%AC-%EC%97%90%EB%9F%AC-%ED%95%B4%EA%B2%B0%ED%95%98%EA%B8%B0</id><content type="html" xml:base="/macos/macOS-%EC%97%85%EB%8D%B0%EC%9D%B4%ED%8A%B8-%ED%9B%84-%EA%B0%9C%EB%B0%9C%EB%8F%84%EA%B5%AC-%EC%97%90%EB%9F%AC-%ED%95%B4%EA%B2%B0%ED%95%98%EA%B8%B0/">&lt;h2 id=&quot;xcrun-error-invalid-active-developer-path-에러-해결하기&quot;&gt;xcrun: error: invalid active developer path 에러 해결하기&lt;/h2&gt;

&lt;p&gt;macOS 업데이트 후 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;xcrun: error: invalid active developer path&lt;/code&gt; 관련 에러가 출력될 때가 있습니다. 특히 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Big Sur&lt;/code&gt; 업데이트 이후 계속 발생하여 해결방법을 정리해보았습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/image/2021-03-09-19-50037-xcrun.png&quot; alt=&quot;2021-03-09-19-50037-xcrun&quot; /&gt;&lt;/p&gt;

&lt;p&gt;다음 명령어를 실행하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;command line developer tools&lt;/code&gt;를 재설치하면 문제가 해결됩니다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;xcode-select &lt;span class=&quot;nt&quot;&gt;--install&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>zerodotone</name></author><category term="macOS" /><summary type="html">xcrun: error: invalid active developer path 에러 해결하기</summary></entry><entry><title type="html">Vapor(Swift Server Side Web Framework)</title><link href="/vapor/web%20framework/Vapor(Swift-Server-Side-Framework)-%EC%84%A4%EC%B9%98%ED%95%98%EA%B8%B0/" rel="alternate" type="text/html" title="Vapor(Swift Server Side Web Framework)" /><published>2021-03-08T00:00:00+09:00</published><updated>2021-03-08T19:50:00+09:00</updated><id>/vapor/web%20framework/Vapor(Swift-Server-Side-Framework)-%EC%84%A4%EC%B9%98%ED%95%98%EA%B8%B0</id><content type="html" xml:base="/vapor/web%20framework/Vapor(Swift-Server-Side-Framework)-%EC%84%A4%EC%B9%98%ED%95%98%EA%B8%B0/">&lt;h2 id=&quot;vapor란&quot;&gt;Vapor란?&lt;/h2&gt;

&lt;p&gt;Vapor는 Swift로 작성된 오픈소스 웹 프레임워크입니다. RESful API, 웹 앱을 지원하고, 웹 소켓을 사용하여 실시간 애플리케이션을 만드는데 사용할 수 있습니다. 그 외에도 ORM, 템플릿 언어 및 패키지를 제공하여 사용자 인증, 인가 기능을 용이하게 합니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;vapor-설치하기&quot;&gt;Vapor 설치하기&lt;/h3&gt;

&lt;p&gt;Vapor를 설치하기 위해서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Xcode&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;homebrew&lt;/code&gt; 가 설치되어 있어야 합니다. 이후 다음과 같이 Vapor를 설치할 수 있습니다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;터미널에서 다음 명령어를 실행하여 Vapor를 설치합니다.&lt;/p&gt;

    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;vapor
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/image/2021-03-08-21-28.06-Vapor-install.png&quot; alt=&quot;2021-03-08-21-28.06-Vapor-install&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;vapor-프로젝트-생성-및-서버-실행하기&quot;&gt;Vapor 프로젝트 생성 및 서버 실행하기&lt;/h3&gt;

&lt;p&gt;Vapor 설치 후 프로젝트를 생성하고 서버에 접속하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Hello, world!&lt;/code&gt; 화면을 출력할 수 있습니다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;터미널에서 다음 명령어를 실행하여 새 프로젝트를 생성합니다.&lt;/p&gt;

    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;vapor new hello &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/image/2021-03-08-21-29-00-Vapor-new-project.png&quot; alt=&quot;2021-03-08-21-29-00-Vapor-new-project&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;프로젝트 생성하면 다음 명령어를 실행하여 Xcode로 프로젝트를 열 수 있습니다.&lt;/p&gt;

    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;hello
open Package.swift
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/image/2021-03-08-21-29-19-open-Vapor.png&quot; alt=&quot;2021-03-08-21-29-19-open-Vapor&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Xcode에서 프로젝트를 실행합니다.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/image/2021-03-08-21-57-56-xcode-project.png&quot; alt=&quot;2021-03-08-21-57-56-xcode-project&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;중간에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Developer Tools Access&lt;/code&gt; 창이 뜨는데 인증하고 넘어갑니다.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/image/2021-03-08-21-58-51-access.png&quot; alt=&quot;2021-03-08-21-58-51-access&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;로컬에서 실행된 Vapor에 접근하면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;Hello, world!&quot;&lt;/code&gt; 메시지를 확인할 수 있습니다.&lt;/p&gt;

    &lt;blockquote&gt;
      &lt;p&gt;http://127.0.0.1:8080/hello&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/assets/image/2021-03-08-22-08-13-hello.png&quot; alt=&quot;2021-03-08-22-08-13-hello&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;참고-url&quot;&gt;참고 URL&lt;/h3&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a href=&quot;https://vapor.codes&quot;&gt;Vapor 공식 사이트&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/vapor/vapor&quot;&gt;Vapor GitHub&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Vapor_(web_framework)&quot;&gt;Vapor Wiki&lt;/a&gt;&lt;/p&gt;</content><author><name>zerodotone</name></author><category term="Vapor" /><category term="Web Framework" /><summary type="html">Vapor란?</summary></entry><entry><title type="html">macOS 초기 설정하기</title><link href="/macos/preferences/macOS-%EC%B4%88%EA%B8%B0-%EC%84%A4%EC%A0%95%ED%95%98%EA%B8%B0/" rel="alternate" type="text/html" title="macOS 초기 설정하기" /><published>2021-03-07T00:00:00+09:00</published><updated>2021-03-08T19:50:00+09:00</updated><id>/macos/preferences/macOS-%EC%B4%88%EA%B8%B0-%EC%84%A4%EC%A0%95%ED%95%98%EA%B8%B0</id><content type="html" xml:base="/macos/preferences/macOS-%EC%B4%88%EA%B8%B0-%EC%84%A4%EC%A0%95%ED%95%98%EA%B8%B0/">&lt;h3 id=&quot;키보드-누르고-있을-때-반복-입력하도록-수정&quot;&gt;키보드 누르고 있을 때 반복 입력하도록 수정&lt;/h3&gt;

&lt;p&gt;터미널이나 메모장에서 키보드를 누르고 있으면 문자가 하나만 입력되는데 키보드를 누르고 있으면 계속 입력되도록 변경하려면 터미널에서 다음의 명령을 실행합니다.&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;defaults&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;write&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;g&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;ApplePressAndHoldEnabled&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;해당 명령을 실행하고 프로그램을 다시 실행시키면 문자를 계속 입력 할 수 있습니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;중간중간-점-입력될-때-해당-기능-끄기&quot;&gt;중간중간 점(.) 입력될 때 해당 기능 끄기&lt;/h3&gt;

&lt;p&gt;타이핑 시 중간에 점(.)이 입력될 때가 있다. 원인을 알아보니 스페이스 바를 두 번 누르면 입력이 되는 데 해당 기능이 방해가 된다면 키보드 환경 설정에서 해당 기능을 끌 수 있다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;설정 경로&lt;/p&gt;

  &lt;p&gt;🍏 &amp;gt; System Preferences &amp;gt; Keyboard &amp;gt; Text&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Add period with double-space&lt;/code&gt; 메뉴의 체크박스를 해제하면 된다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/image/2021-03-08-10-43-03-keyboard.png&quot; alt=&quot;2021-03-08-10-43-03-keyboard&quot; /&gt;&lt;/p&gt;</content><author><name>zerodotone</name></author><category term="macOS" /><category term="Preferences" /><summary type="html">키보드 누르고 있을 때 반복 입력하도록 수정</summary></entry><entry><title type="html">UML Class Diagram with Swift</title><link href="/uml/swift/UML-Class-Diagram/" rel="alternate" type="text/html" title="UML Class Diagram with Swift" /><published>2021-03-03T00:00:00+09:00</published><updated>2021-03-04T01:29:00+09:00</updated><id>/uml/swift/UML-Class-Diagram</id><content type="html" xml:base="/uml/swift/UML-Class-Diagram/">&lt;p&gt;Class Diagram, 클래스 다이어그램&lt;/p&gt;

&lt;p&gt;클래스 다이어그램은 클래스 내부의 정적인 내용이나 클래스 사이의 관계를 표현할 수 있는 다이어그램이다. 클래스 내부의 변수, 메서드를 표현하고 각 클래스간의 관계(상속, 참조 등)을 나타낼 수 있다. 한 마디로 소스코드에 나타난 타입간의 의존 관계를 모두 나타낸다.&lt;/p&gt;

&lt;p&gt;클래스 다이어그램의 구성 요소&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/image/2021-03-03-4-34-52-class-diagram-element.png&quot; alt=&quot;2021-03-03-4-34-52-class-diagram-element&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;abstract: 추상 클래스는 구현체가 없는 1개 이상의 추상 메서드를 가지고 있는 클래스입니다.&lt;/li&gt;
  &lt;li&gt;annotation: annotation의 경우 Java 5에서 추가된 기능으로 @Override, @Deprecated 와 같은 annotation이 있다.&lt;/li&gt;
  &lt;li&gt;class: 객체지향 언어에서의 클래스입니다.&lt;/li&gt;
  &lt;li&gt;entity: 시스템이 동작할 때 오랫동안 그 값이 유지되어야 하는 클래스?&lt;/li&gt;
  &lt;li&gt;enum: 열거형을 나타냅니다.&lt;/li&gt;
  &lt;li&gt;interface: 인터페이스를 나타냅니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;관계의-종류&quot;&gt;관계의 종류&lt;/h2&gt;

&lt;p&gt;클래스간에는 다양한 관계가 있을 수 있으며 표현 방식도 다양합니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Association&lt;/li&gt;
  &lt;li&gt;Inheritance, Generalization&lt;/li&gt;
  &lt;li&gt;Implementation, Realization&lt;/li&gt;
  &lt;li&gt;Dependency&lt;/li&gt;
  &lt;li&gt;Aggregation&lt;/li&gt;
  &lt;li&gt;Composition&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;association-연관-관계&quot;&gt;Association, 연관 관계&lt;/h3&gt;

&lt;p&gt;다른 객체의 참조를 가지는 인스턴스 변수를 가지고 있을 때 두 클래스는 연관 관계라고 합니다. 아래 그림은 Phone 클래스가 Button 클래스를 참조하는 연관 관계를 보여줍니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/image/2021-03-11 at 11.14.20 PM-association.png&quot; alt=&quot;2021-03-11 at 11.14.20 PM-association&quot; /&gt;&lt;/p&gt;

&lt;p&gt;연관 관계를 소스코드로 다음과 같이 표현해 볼 수 있습니다.&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Phone&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  	&lt;span class=&quot;c1&quot;&gt;// buttons 프로퍼티의 타입이 Button 클래스&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Button&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Button&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;inheritance-generalization-상속-관계-일반화-관계&quot;&gt;Inheritance, Generalization, 상속 관계, 일반화 관계&lt;/h3&gt;

&lt;p&gt;객체지향 개념에서 상속을 나타내는 관계입니다. 한 클래스가 다른 클래스를 포함하는 상위 개념일 때 이를 일반화 관계라고 합니다. 아래 그림은 SalariedEmployee 클래스가 Employee 클래스를 상속하는 관계를 보여줍니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/image/2021-03-11 at 11.11.32 PM-Inheritance.png&quot; alt=&quot;2021-03-11 at 11.11.32 PM-Inheritance&quot; /&gt;&lt;/p&gt;

&lt;p&gt;상속 관계를 소스코드로 다음과 같이 표현해 볼 수 있습니다.&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Employee&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;SalariedEmployee&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Employee&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;implementation-realization-구현-관계-실체화-관계&quot;&gt;Implementation, Realization, 구현 관계, 실체화 관계&lt;/h3&gt;

&lt;p&gt;객체지향 개념에서 (인터페이스) 구현을 나타내는 관계입니다. 한 클래스가 인터페이스를 구현할 경우 이를 실체화 관계라고 합니다. 아래 그림은 ButtonListenerAdapter 클래스가 ButtonListener 프로토콜을 구현하는 관계를 보여줍니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/image/2021-03-11 at 11.20.38 PM-Implementation.png&quot; alt=&quot;2021-03-11 at 11.20.38 PM-Implementation&quot; /&gt;&lt;/p&gt;

&lt;p&gt;구현 관계를 소스코드로 다음과 같이 표현해 볼 수 있습니다.&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;protocol&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;ButtonListener&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;ButtonListenerAdapter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;ButtonListener&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;dependency-의존-관계&quot;&gt;Dependency, 의존 관계&lt;/h3&gt;

&lt;p&gt;한 클래스가 다른 클래스를 참조하는 관계입니다. 한 클래스의 내부 프로퍼티에 저장하지 않고 사용하는 관계를 의존 관계라고 합니다. 아래 그림은 User 클래스가 Scheduel 클래스를 의존하는 관계를 보여줍니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/image/2021-03-11 at 11.23.54 PM-Dependency.png&quot; alt=&quot;2021-03-11 at 11.23.54 PM-Dependency&quot; /&gt;&lt;/p&gt;

&lt;p&gt;의존 관계를 소스코드로 다음과 같이 표현해 볼 수 있습니다.&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Schedule&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;createSchedule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Schedule&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;Schedule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  
    &lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;useSchedule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;schedule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Schedule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;schedule&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;aggregation-집합-관계&quot;&gt;Aggregation, 집합 관계&lt;/h3&gt;

&lt;p&gt;클래스 사이에서 전체 또는 부분 같은 관계를 나타냅니다. 한 클래스가 다른 클래스를 내부 프로퍼티로 가지고 있지만 라이프 타임이 독립적인 관계를 집합 관계라고 합니다. 아래 그림은 Whole 클래스와 Part 클래스의 집합 관계를 보여줍니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/image/2021-03-11 at 11.26.46 PM-Aggregation.png&quot; alt=&quot;2021-03-11 at 11.26.46 PM-Aggregation&quot; /&gt;&lt;/p&gt;

&lt;p&gt;집합 관계를 소스코드로 다음과 같이 표현해 볼 수 있습니다.&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Part&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Whole&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;part&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Part&lt;/span&gt;
		&lt;span class=&quot;c1&quot;&gt;// 외부에서 Part를 받아옵니다. Whole 클래스가 deinit이 되어도 Part는 deinit 되지 않습니다.&lt;/span&gt;
    &lt;span class=&quot;nf&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;part&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Part&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;part&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;part&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;composition-합성-관계&quot;&gt;Composition, 합성 관계&lt;/h3&gt;

&lt;p&gt;클래스 사이에서 전체 또는 부분 같은 관계를 나타냅니다. 한 클래스가 다른 클래스를 직접 생성하고 내부 프로퍼티에 할당하여 가지고 있어 라이프 타임이 종속적인 관계를 합성 관계라고 합니다. 아래 그림은 Ward 클래스와 Owner 클래스가 합성 관계에 있는 것을 보여줍니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/image/2021-03-11 at 11.27.49 PM-Composition.png&quot; alt=&quot;2021-03-11 at 11.27.49 PM-Composition&quot; /&gt;&lt;/p&gt;

&lt;p&gt;합성 관계를 소스코드로 다음과 같이 표현해 볼 수 있습니다.&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Ward&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Owner&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;ward&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Ward&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Ward&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>zerodotone</name></author><category term="UML" /><category term="Swift" /><summary type="html">Class Diagram, 클래스 다이어그램</summary></entry><entry><title type="html">iOS link</title><link href="/ios/iOS-link/" rel="alternate" type="text/html" title="iOS link" /><published>2021-02-27T00:00:00+09:00</published><updated>2021-02-27T10:51:00+09:00</updated><id>/ios/iOS-link</id><content type="html" xml:base="/ios/iOS-link/">&lt;p&gt;링크 모음&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://theswiftdev.com/conventions-for-xcode/&quot;&gt;Xcode 프로젝트 컨벤션&lt;/a&gt;: Xcode 프로젝트 구성 시 네이밍 컨벤션 도움글.&lt;/p&gt;</content><author><name>zerodotone</name></author><category term="iOS" /><summary type="html">링크 모음</summary></entry><entry><title type="html">first post</title><link href="/etc/first-post/" rel="alternate" type="text/html" title="first post" /><published>2021-02-24T00:00:00+09:00</published><updated>2021-02-26T11:35:00+09:00</updated><id>/etc/first-post</id><content type="html" xml:base="/etc/first-post/">&lt;p&gt;zerodotone의 첫 포스팅인 것인가&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;이것은 인용인 것인가&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;h2 id=&quot;이것은-단락인-것인가-header-2-인-것인가&quot;&gt;이것은 단락인 것인가 header 2 인 것인가&lt;/h2&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;swift&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;이것은 코드인 것인가&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이것은 코드인 것이다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;h2 id=&quot;하나-둘-셋&quot;&gt;하나 둘 셋&lt;/h2&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;이것은 하나 둘 셋 인 것인가&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://zdodev.github.io&quot;&gt;내 블로그인 것이야&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</content><author><name>zerodotone</name></author><category term="etc" /><summary type="html">zerodotone의 첫 포스팅인 것인가</summary></entry></feed>